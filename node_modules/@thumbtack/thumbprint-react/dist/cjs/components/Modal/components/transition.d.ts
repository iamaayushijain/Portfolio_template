import React from 'react';
declare type Stage = 'exited' | 'entering' | 'entered' | 'exiting' | null;
interface PropTypes {
    children: (stage: Stage) => JSX.Element;
    in: boolean;
    timeout: {
        enter: number;
        exit: number;
    };
    onEntered?: () => void;
    onExited?: () => void;
}
interface StateTypes {
    stage: Stage;
    currentTimeout: number | null;
}
export default class Transition extends React.Component<PropTypes, StateTypes> {
    constructor(props: PropTypes);
    componentDidMount(): void;
    componentDidUpdate(prevProps: {
        in: boolean;
    }): void;
    componentWillUnmount(): void;
    onEntering(): void;
    onEntered(): void;
    onExiting(): void;
    onExited(): void;
    clearExistingTimeout(): void;
    render(): JSX.Element | null;
}
export {};
//# sourceMappingURL=transition.d.ts.map