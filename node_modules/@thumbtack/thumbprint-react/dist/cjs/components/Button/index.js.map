{"version":3,"file":"index.js","sources":["../../../../components/Button/index.tsx"],"sourcesContent":["import React from 'react';\nimport { Themed, Plain } from '../UIAction/index';\n\ninterface CommonProps {\n    children?: React.ReactNode;\n    iconLeft?: React.ReactNode;\n    iconRight?: React.ReactNode;\n    isDisabled?: boolean;\n    onClick?: () => void;\n    onMouseEnter?: () => void;\n    onMouseOver?: () => void;\n    onFocus?: () => void;\n    onMouseLeave?: () => void;\n    onBlur?: () => void;\n    theme?: 'primary' | 'secondary' | 'tertiary' | 'inherit';\n    type?: 'button' | 'submit';\n    dataTest?: string;\n    dataTestId?: string;\n    accessibilityLabel?: string;\n}\n\nconst getCommonProps = (props: CommonProps): CommonProps => ({\n    onClick: props.onClick,\n    isDisabled: props.isDisabled,\n    type: props.type,\n    children: props.children,\n    onMouseEnter: props.onMouseEnter,\n    onMouseOver: props.onMouseOver,\n    onFocus: props.onFocus,\n    onMouseLeave: props.onMouseLeave,\n    onBlur: props.onBlur,\n    accessibilityLabel: props.accessibilityLabel,\n    dataTest: props.dataTest,\n    dataTestId: props.dataTestId,\n});\n\nconst TextButton = React.forwardRef<HTMLButtonElement, TextButtonProps>(\n    (\n        {\n            children,\n            iconLeft,\n            iconRight,\n            isDisabled = false,\n            onClick,\n            onMouseEnter,\n            onMouseOver,\n            onFocus,\n            onMouseLeave,\n            onBlur,\n            accessibilityLabel,\n            theme = 'primary',\n            type = 'button',\n            dataTest,\n            dataTestId,\n        }: TextButtonProps,\n        ref,\n    ): JSX.Element => (\n        <Plain\n            {...getCommonProps({\n                onClick,\n                isDisabled,\n                type,\n                children,\n                onMouseEnter,\n                onMouseOver,\n                onFocus,\n                onMouseLeave,\n                onBlur,\n                accessibilityLabel,\n                dataTest,\n                dataTestId,\n            })}\n            theme={theme}\n            iconLeft={iconLeft}\n            iconRight={iconRight}\n            ref={ref}\n        />\n    ),\n);\n\nexport interface TextButtonProps {\n    /**\n     * Contents displayed within the button.\n     */\n    children?: React.ReactNode;\n    /**\n     * Icon from [Thumbprint Icons](/icons/) to render left of the text within `TextButton`.\n     */\n    iconLeft?: React.ReactNode;\n    /**\n     * Icon from [Thumbprint Icons](/icons/) to render right of the text within `TextButton`.\n     */\n    iconRight?: React.ReactNode;\n    /**\n     * Visually and functionally disables the button. We discourage the use of this prop since it\n     * is difficult to visually indicate that a link is disabled. Consider not rendering the\n     * `TextButton` if it is not interactive.\n     */\n    isDisabled?: boolean;\n    /**\n     * Function that will run when the button is clicked on.\n     */\n    onClick?: () => void;\n    /**\n     * Function that runs when the user hovers on the button.\n     */\n    onMouseEnter?: () => void;\n    /**\n     * Function that runs when the user hovers on the button. Unlike `onMouseEnter`, `onMouseOver`\n     * fires each time a child element receives focus.\n     */\n    onMouseOver?: () => void;\n    /**\n     * Function that runs when the button receives focus.\n     */\n    onFocus?: () => void;\n    /**\n     * Function that runs when the user hovers away from the button.\n     */\n    onMouseLeave?: () => void;\n    /**\n     * Function that runs when the button loses focus.\n     */\n    onBlur?: () => void;\n    /**\n     * Description of the button’s content. It is required if the button has an icon and no\n     * descriptive text.\n     */\n    accessibilityLabel?: string;\n    /**\n     * Controls the button’s background, text, and border color.\n     * `inherit` will make the button inherit `color` from its parent.\n     */\n    theme?: 'primary' | 'secondary' | 'tertiary' | 'inherit';\n    /**\n     * Button’s of type `submit` will submit a form when used within a `form` element.\n     */\n    type?: 'button' | 'submit';\n    /**\n     * A selector hook into the React component for use in automated testing environments.\n     */\n    dataTestId?: string;\n    /**\n     * A selector hook into the React component for use in automated testing environments.\n     * @deprecated Deprecated in favor of the `dataTestId` prop\n     */\n    dataTest?: string;\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n    (\n        {\n            children,\n            isDisabled = false,\n            isLoading = false,\n            icon,\n            iconRight,\n            accessibilityLabel,\n            type = 'button',\n            onClick,\n            onMouseEnter,\n            onMouseOver,\n            onFocus,\n            onMouseLeave,\n            onBlur,\n            theme = 'primary',\n            size = 'large',\n            width = 'auto',\n            dataTest,\n            dataTestId,\n        }: ButtonProps,\n        ref,\n    ): JSX.Element => (\n        <Themed\n            {...getCommonProps({\n                onClick,\n                isDisabled,\n                type,\n                children,\n                onMouseEnter,\n                onMouseOver,\n                onFocus,\n                onMouseLeave,\n                onBlur,\n                accessibilityLabel,\n                dataTest,\n                dataTestId,\n            })}\n            icon={icon}\n            iconRight={iconRight}\n            isLoading={isLoading}\n            theme={theme}\n            size={size}\n            width={width}\n            ref={ref}\n        />\n    ),\n);\n\nexport interface ButtonProps {\n    /**\n     * Contents displayed within the button.\n     */\n    children?: React.ReactNode;\n    /**\n     * Visually and functionally disables the button.\n     */\n    isDisabled?: boolean;\n    /**\n     * Boolean determining whether the button is in a loading state. When `true` the text will\n     * we replaced with a loading animation and interaction will be disabled.\n     */\n    isLoading?: boolean;\n    /**\n     * Icon from [Thumbprint Icons](/icons/) to render left within the button. It must be one of the\n     * `small` icons.\n     */\n    icon?: React.ReactNode;\n    /**\n     * Icon from [Thumbprint Icons](/icons/) to render right within the button. It must be one of the\n     * `small` icons.\n     */\n    iconRight?: React.ReactNode;\n    /**\n     * Description of the button’s content. It is required if the button has an icon and no\n     * descriptive text.\n     */\n    accessibilityLabel?: string;\n    /**\n     * Button’s of type `submit` will submit a form when used within a `form` element.\n     */\n    type?: 'button' | 'submit';\n    /**\n     * Function that will run when the button is clicked on.\n     */\n    onClick?: () => void;\n    /**\n     * Function that runs when the user hovers on the button.\n     */\n    onMouseEnter?: () => void;\n    /**\n     * Function that runs when the user hovers on the button. Unlike `onMouseEnter`, `onMouseOver`\n     * fires each time a child element receives focus.\n     */\n    onMouseOver?: () => void;\n    /**\n     * Function that runs when the button receives focus.\n     */\n    onFocus?: () => void;\n    /**\n     * Function that runs when the user hovers away from the button.\n     */\n    onMouseLeave?: () => void;\n    /**\n     * Function that runs when the button loses focus.\n     */\n    onBlur?: () => void;\n    /**\n     * Controls the button’s background, text, and border color.\n     */\n    theme?: 'primary' | 'secondary' | 'tertiary' | 'caution' | 'solid';\n    /**\n     * Changes the button's `line-height`, `padding`, `border-radius`, and `font-size`.\n     */\n    size?: 'small' | 'large';\n    /**\n     * `Button` components are as wide as the content that is passed in. The `full` option will\n     * expand the width to `100%` on all screens. `full-below-small` will expand the width to 100%\n     * on devices smaller than [our `small` breakpoint](/tokens/#section-breakpoint).\n     */\n    width?: 'auto' | 'full' | 'full-below-small';\n    /**\n     * A selector hook into the React component for use in automated testing environments.\n     */\n    dataTestId?: string;\n    /**\n     * A selector hook into the React component for use in automated testing environments.\n     * @deprecated Deprecated in favor of the `dataTestId` prop\n     */\n    dataTest?: string;\n}\n\nexport default Button;\nexport { TextButton };\n"],"names":["getCommonProps","props","onClick","isDisabled","type","children","onMouseEnter","onMouseOver","onFocus","onMouseLeave","onBlur","accessibilityLabel","dataTest","dataTestId","TextButton","React","forwardRef","ref","iconLeft","iconRight","theme","Plain","Button","isLoading","icon","size","width","Themed"],"mappings":"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"}