{"version":3,"file":"index.js","sources":["../../../../components/ModalCurtain/index.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport classNames from 'classnames';\n\nimport NoScroll from './components/no-scroll';\n\nimport useCloseOnEscape from '../../utils/use-close-on-escape';\nimport useFocusTrap from '../../utils/use-focus-trap';\nimport ConditionalPortal from '../../utils/ConditionalPortal';\n\nimport styles from './index.module.scss';\n\nexport interface ModalCurtainProps {\n    /**\n     * Content that appears on top of the curtain. `children` is a [render\n     * prop](https://reactjs.org/docs/render-props.html) and expects a function. The function\n     * provided receives an object two properties:\n     *\n     * * `curtainClassName`: Handles positioning, z-index, opacity, overflow, and visibility.\n     * Should be added to the `className` of the outermost element within the `children`.\n     * * `curtainOnClick`: You can optionally add this prop to the `onClick` of an element within\n     * `children`. This is typically used on to close a ModalCurtain when clicking on a dark\n     * backdrop.\n     *\n     * The examples on this page include code samples that demonstrate real use of these props.\n     */\n    children?: ({\n        curtainClassName,\n        curtainOnClick,\n    }: {\n        curtainClassName: string;\n        curtainOnClick: (event: React.MouseEvent<HTMLElement>) => void;\n    }) => JSX.Element;\n    /**\n     * The four states that a modal can be in.\n     *\n     * * `exited` – Modal is fully closed\n     * * `entering` – Modal is opening\n     * * `entered` – Modal has fully open\n     * * `exiting` – Modal is closing\n     *\n     * Modals that do not have transitions will only use the `entered` and `exited` stages.\n     */\n    stage?: 'entering' | 'entered' | 'exiting' | 'exited' | null;\n    /**\n     * Accessibility title used to describe the content of the modal to screen readers.\n     */\n    accessibilityLabel?: string;\n    /**\n     * Function that fires to close the modal.\n     */\n    onCloseClick: () => void;\n    /**\n     * Determines if the modal should close when pressing the escape key.\n     */\n    shouldCloseOnEscape?: boolean;\n    /**\n     * The element that should be focused when the modal opens. If omitted, the entire container\n     * element of the modal is focused.\n     */\n    initialFocus?: HTMLElement | null;\n}\n\nexport default function ModalCurtain({\n    stage = 'exited',\n    shouldCloseOnEscape = true,\n    accessibilityLabel = 'Modal',\n    initialFocus: initialFocusProp,\n    onCloseClick,\n    children,\n}: ModalCurtainProps): JSX.Element {\n    const [isClient, setIsClient] = useState<boolean>(false);\n    const [wrapperEl, setWrapperEl] = useState<HTMLDivElement | null>(null);\n\n    useEffect(() => {\n        setIsClient(true);\n    }, []);\n\n    const initialFocus = initialFocusProp || wrapperEl;\n\n    const isEnteringOrEntered = stage === 'entering' || stage === 'entered';\n    const shouldBindEscListener = isClient && shouldCloseOnEscape && isEnteringOrEntered;\n    const shouldTrapFocus = isClient && !!initialFocus && stage === 'entered';\n    const shouldDisableScrolling = isEnteringOrEntered;\n\n    useCloseOnEscape(onCloseClick, shouldBindEscListener);\n    useFocusTrap(wrapperEl, shouldTrapFocus, initialFocus);\n\n    return (\n        <ConditionalPortal shouldDisplace>\n            {/* Use tabIndex=\"-1\" to allow programmatic focus (as initialFocus node for focus-trap)\n            but not be tabbable by user. */}\n            <div\n                role=\"dialog\"\n                aria-label={accessibilityLabel}\n                tabIndex={-1}\n                ref={(element): void => {\n                    setWrapperEl(element);\n                }}\n            >\n                {shouldDisableScrolling && <NoScroll />}\n\n                {/* This component uses the render prop pattern. `children` expects a function and\n                receives an object that contains `curtainOnClick` and `curtainClassName`.\n                While using those two properties is optional, they provide helpful functionality. */}\n                {children &&\n                    children({\n                        curtainOnClick: event => {\n                            // Ensures that the click event happened on the element that has the\n                            // `onClick`. This prevents clicks deep within `children` from bubbling\n                            // up and closing the ModalCurtain.\n                            if (event.target === event.currentTarget) {\n                                onCloseClick();\n                            }\n                        },\n                        curtainClassName: classNames({\n                            [styles.root]: true,\n                            [styles.rootOpen]: isEnteringOrEntered,\n                        }),\n                    })}\n            </div>\n        </ConditionalPortal>\n    );\n}\n"],"names":["ModalCurtain","stage","shouldCloseOnEscape","accessibilityLabel","initialFocusProp","initialFocus","onCloseClick","children","useState","isClient","setIsClient","wrapperEl","setWrapperEl","useEffect","isEnteringOrEntered","shouldBindEscListener","shouldTrapFocus","shouldDisableScrolling","useCloseOnEscape","useFocusTrap","React","ConditionalPortal","element","NoScroll","curtainOnClick","event","target","currentTarget","curtainClassName","classNames","styles","root","rootOpen"],"mappings":";;;;;;;;;;;;;;SA8DwBA;;;wBACpBC;MAAAA,gCAAQ;mCACRC;MAAAA,yDAAsB;mCACtBC;MAAAA,wDAAqB;MACPC,wBAAdC;MACAC,oBAAAA;MACAC,gBAAAA;;kBAEgCC,cAAQ,CAAU,KAAV;;MAAjCC;MAAUC;;mBACiBF,cAAQ,CAAwB,IAAxB;;MAAnCG;MAAWC;;EAElBC,eAAS,CAAC;IACNH,WAAW,CAAC,IAAD,CAAX;GADK,EAEN,EAFM,CAAT;MAIML,YAAY,GAAGD,gBAAgB,IAAIO,SAAzC;MAEMG,mBAAmB,GAAGb,KAAK,KAAK,UAAV,IAAwBA,KAAK,KAAK,SAA9D;MACMc,qBAAqB,GAAGN,QAAQ,IAAIP,mBAAZ,IAAmCY,mBAAjE;MACME,eAAe,GAAGP,QAAQ,IAAI,CAAC,CAACJ,YAAd,IAA8BJ,KAAK,KAAK,SAAhE;MACMgB,sBAAsB,GAAGH,mBAA/B;EAEAI,wBAAgB,CAACZ,YAAD,EAAeS,qBAAf,CAAhB;EACAI,oBAAY,CAACR,SAAD,EAAYK,eAAZ,EAA6BX,YAA7B,CAAZ;SAGIe,6BAACC,yBAAD;IAAmB,cAAc;KAG7BD;IACI,IAAI,EAAC,QADT;kBAEgBjB,kBAFhB;IAGI,QAAQ,EAAE,CAAC,CAHf;IAII,GAAG,EAAE,aAACmB,OAAD;MACDV,YAAY,CAACU,OAAD,CAAZ;;KAGHL,sBAAsB,IAAIG,6BAACG,gBAAD,OAR/B,EAaKhB,QAAQ,IACLA,QAAQ,CAAC;IACLiB,cAAc,EAAE,wBAAAC,KAAK;;;;UAIbA,KAAK,CAACC,MAAN,KAAiBD,KAAK,CAACE,aAA3B,EAA0C;QACtCrB,YAAY;;KANf;IASLsB,gBAAgB,EAAEC,UAAU,0EACvBC,MAAM,CAACC,IADgB,EACT,IADS,yDAEvBD,MAAM,CAACE,QAFgB,EAELlB,mBAFK;GATxB,CAdhB,CAHJ,CADJ;;;;;"}