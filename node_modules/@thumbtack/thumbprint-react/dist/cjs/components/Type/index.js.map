{"version":3,"file":"index.js","sources":["../../../../components/Type/index.tsx"],"sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\n\nimport styles from './index.module.scss';\n\nexport interface TitleProps {\n    /**\n     * Text to render.\n     */\n    children: React.ReactNode;\n    /**\n     * Size level of the text.\n     */\n    size: 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8;\n    /**\n     * Allows you to pass in additional styles to apply to the text. It is intentionally not\n     * possible to overwrite `font-size`, `line-height`, and `font-weight`. If you need to do so,\n     * consider using the [\"Type\" tokens](/tokens/#type) from Thumbprint Tokens or working with\n     * a designer to use one of the styles on this page.\n     */\n    className?: string;\n    /**\n     * Level of the heading element (h1 to h6) to render. If omitted, a heading tag is not used,\n     * and a div is used instead.\n     */\n    headingLevel?: 1 | 2 | 3 | 4 | 5 | 6;\n    /**\n     * Adds a HTML `id` attribute to the text. This is used for linking to a\n     * [URL fragment](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a#attr-href).\n     */\n    id?: string;\n    /**\n     * A selector to hook into the React component for use in automated testing environments.\n     */\n    dataTestId?: string;\n    /**\n     * A selector to hook into the React component for use in automated testing environments.\n     * @deprecated Deprecated in favor of the `dataTestId` prop\n     */\n    dataTest?: string;\n}\n\nexport function Title({\n    children,\n    size,\n    className,\n    headingLevel,\n    dataTest,\n    dataTestId,\n    id,\n}: TitleProps): JSX.Element {\n    const elementName = headingLevel ? `h${headingLevel}` : 'div';\n\n    const props = {\n        className: classNames(styles[`title${size}`], className),\n        'data-test': dataTest,\n        'data-testid': dataTestId,\n        id,\n    };\n\n    return React.createElement(elementName, props, children);\n}\n\nexport interface TextProps {\n    /**\n     * Text to render.\n     */\n    children?: React.ReactNode;\n    /**\n     * Size level of the text.\n     */\n    size?: 1 | 2 | 3;\n    /**\n     * Allows you to pass in additional styles to apply to the text. It is intentionally not\n     * possible to overwrite `font-size` and `line-height`. If you need to do so, consider using\n     * the [\"Type\" tokens](/tokens/#type) from Thumbprint Tokens or working with a designer to\n     * use one of the styles on this page.\n     */\n    className?: string;\n    /**\n     * Name of the DOM element to render. Defaults to `p` for a paragraph tag.\n     */\n    elementName?: keyof React.ReactHTML;\n    /**\n     * A selector to hook into the React component for use in automated testing environments.\n     */\n    dataTestId?: string;\n    /**\n     * A selector to hook into the React component for use in automated testing environments.\n     * @deprecated Deprecated in favor of the `dataTestId` prop\n     */\n    dataTest?: string;\n}\n\nexport function Text({\n    children,\n    size = 1,\n    className,\n    elementName = 'p',\n    dataTest,\n    dataTestId,\n}: TextProps): JSX.Element {\n    const props = {\n        className: classNames(styles[`text${size}`], className),\n        'data-test': dataTest,\n        'data-testid': dataTestId,\n    };\n\n    return React.createElement(elementName, props, children);\n}\n"],"names":["Title","children","size","className","headingLevel","dataTest","dataTestId","id","elementName","props","classNames","styles","React","createElement","Text"],"mappings":";;;;;;;;;SA0CgBA;MACZC,gBAAAA;MACAC,YAAAA;MACAC,iBAAAA;MACAC,oBAAAA;MACAC,gBAAAA;MACAC,kBAAAA;MACAC,UAAAA;MAEMC,WAAW,GAAGJ,YAAY,cAAOA,YAAP,IAAwB,KAAxD;MAEMK,KAAK,GAAG;IACVN,SAAS,EAAEO,UAAU,CAACC,MAAM,gBAAST,IAAT,EAAP,EAAyBC,SAAzB,CADX;iBAEGE,QAFH;mBAGKC,UAHL;IAIVC,EAAE,EAAFA;GAJJ;SAOOK,cAAK,CAACC,aAAN,CAAoBL,WAApB,EAAiCC,KAAjC,EAAwCR,QAAxC,CAAP;;AAkCJ,SAAgBa;MACZb,iBAAAA;yBACAC;MAAAA,+BAAO;MACPC,kBAAAA;gCACAK;MAAAA,6CAAc;MACdH,iBAAAA;MACAC,mBAAAA;MAEMG,KAAK,GAAG;IACVN,SAAS,EAAEO,UAAU,CAACC,MAAM,eAAQT,IAAR,EAAP,EAAwBC,SAAxB,CADX;iBAEGE,QAFH;mBAGKC;GAHnB;SAMOM,cAAK,CAACC,aAAN,CAAoBL,WAApB,EAAiCC,KAAjC,EAAwCR,QAAxC,CAAP;;;;;;"}