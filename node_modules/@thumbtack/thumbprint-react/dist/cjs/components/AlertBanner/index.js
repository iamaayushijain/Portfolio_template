'use strict';

function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }

var _rollupPluginBabelHelpers = require('../../_virtual/_rollupPluginBabelHelpers.js');
var React = require('react');
var React__default = _interopDefault(React);
var classNames = _interopDefault(require('classnames'));
require('../../icons/alert-check.js');
require('../../icons/alert-info.js');
require('../../icons/alert-warning.js');
var blockedFilled = require('../../icons/blocked-filled.js');
var infoFilled = require('../../icons/info-filled.js');
var warningFilled = require('../../icons/warning-filled.js');
var styles = _interopDefault(require('./index.module.scss'));

var ALERT_ICONS = {
  // Icon names map to the icon name in Thumbprint, not the theme prop
  caution: React__default.createElement(warningFilled.default, {
    className: styles.icon
  }),
  info: React__default.createElement(infoFilled.default, {
    className: styles.icon
  }),
  warning: React__default.createElement(blockedFilled.default, {
    className: styles.icon
  })
};
function AlertBanner(_ref) {
  var _classNames;

  var children = _ref.children,
      theme = _ref.theme,
      dataTestId = _ref.dataTestId,
      dataTest = _ref.dataTest,
      icon = _ref.icon;
  return React__default.createElement("div", {
    className: classNames((_classNames = {}, _rollupPluginBabelHelpers.defineProperty(_classNames, styles.root, true), _rollupPluginBabelHelpers.defineProperty(_classNames, styles.caution, theme === 'caution'), _rollupPluginBabelHelpers.defineProperty(_classNames, styles.info, theme === 'info'), _rollupPluginBabelHelpers.defineProperty(_classNames, styles.warning, theme === 'warning'), _classNames)),
    "data-testid": dataTestId,
    "data-test": dataTest
  }, icon || ALERT_ICONS[theme], React__default.createElement("div", null, children));
}

exports.default = AlertBanner;
//# sourceMappingURL=index.js.map
