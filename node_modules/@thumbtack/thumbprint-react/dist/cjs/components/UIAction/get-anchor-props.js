'use strict';

function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }

var _rollupPluginBabelHelpers = require('../../_virtual/_rollupPluginBabelHelpers.js');
var split = _interopDefault(require('lodash/split'));
var isThumbtackUrl = require('./is-thumbtack-url.js');

var getRel = function getRel(url, target) {
  var shouldOpenInNewTab = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
  var rel = arguments.length > 3 ? arguments[3] : undefined;
  // Use a set to prevent duplicate rel values from being defined
  var relSet = new Set();

  if (rel) {
    // handle possibility of multiple rel values being provided
    var relStrings = split(rel, ' ');
    relSet = new Set(relStrings);
  }

  if (shouldOpenInNewTab || target === '_blank') {
    // There are performance benefits of adding `rel="noopener"`.
    // https://jakearchibald.com/2016/performance-benefits-of-rel-noopener/
    // https://mathiasbynens.github.io/rel-noopener/
    // https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/jsx-no-target-blank.md
    relSet.add('noopener');

    if (!isThumbtackUrl.default(url)) {
      relSet.add('noreferrer');
    }
  }

  if (relSet.size > 0) {
    return _rollupPluginBabelHelpers.toConsumableArray(relSet).join(' ');
  }

  return undefined;
};
/**
 * Enable plain and themed `<a>` elements to share the same props.
 */


var getAnchorProps = function getAnchorProps(_ref) {
  var isDisabled = _ref.isDisabled,
      shouldOpenInNewTab = _ref.shouldOpenInNewTab,
      to = _ref.to,
      onClick = _ref.onClick,
      onMouseEnter = _ref.onMouseEnter,
      onMouseOver = _ref.onMouseOver,
      onFocus = _ref.onFocus,
      onMouseLeave = _ref.onMouseLeave,
      onBlur = _ref.onBlur,
      rel = _ref.rel,
      target = _ref.target,
      title = _ref.title;
  return {
    onClick: onClick,
    onMouseEnter: onMouseEnter,
    onMouseOver: onMouseOver,
    onFocus: onFocus,
    onMouseLeave: onMouseLeave,
    onBlur: onBlur,
    href: isDisabled ? undefined : to,
    // NOTE use `noopener` even for internal links in new tabs to prevent potential slowdown of
    // new tab https://mathiasbynens.github.io/rel-noopener/
    rel: getRel(to, target, shouldOpenInNewTab, rel),
    target: target || (shouldOpenInNewTab ? '_blank' : '_self'),
    title: title
  };
};

exports.default = getAnchorProps;
//# sourceMappingURL=get-anchor-props.js.map
