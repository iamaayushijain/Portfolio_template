import { defineProperty as _defineProperty } from '../../_virtual/_rollupPluginBabelHelpers.js';
import React from 'react';
import classNames from 'classnames';
import '../../icons/alert-check.js';
import '../../icons/alert-info.js';
import '../../icons/alert-warning.js';
import BlockedFilled from '../../icons/blocked-filled.js';
import InfoFilled from '../../icons/info-filled.js';
import WarningFilled from '../../icons/warning-filled.js';
import styles from './index.module.scss';

var ALERT_ICONS = {
  // Icon names map to the icon name in Thumbprint, not the theme prop
  caution: React.createElement(WarningFilled, {
    className: styles.icon
  }),
  info: React.createElement(InfoFilled, {
    className: styles.icon
  }),
  warning: React.createElement(BlockedFilled, {
    className: styles.icon
  })
};
function AlertBanner(_ref) {
  var _classNames;

  var children = _ref.children,
      theme = _ref.theme,
      dataTestId = _ref.dataTestId,
      dataTest = _ref.dataTest,
      icon = _ref.icon;
  return React.createElement("div", {
    className: classNames((_classNames = {}, _defineProperty(_classNames, styles.root, true), _defineProperty(_classNames, styles.caution, theme === 'caution'), _defineProperty(_classNames, styles.info, theme === 'info'), _defineProperty(_classNames, styles.warning, theme === 'warning'), _classNames)),
    "data-testid": dataTestId,
    "data-test": dataTest
  }, icon || ALERT_ICONS[theme], React.createElement("div", null, children));
}

export default AlertBanner;
//# sourceMappingURL=index.js.map
