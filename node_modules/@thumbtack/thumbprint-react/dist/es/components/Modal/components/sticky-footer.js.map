{"version":3,"file":"sticky-footer.js","sources":["../../../../../components/Modal/components/sticky-footer.tsx"],"sourcesContent":["import React from 'react';\nimport styles from './sticky-footer.module.scss';\n\ninterface PropTypes {\n    children: React.ReactNode;\n    setSticky: (isSticky: boolean) => void;\n}\n\n/**\n * This component exists because `this.props.setSticky` updates state and React doesn't allow state\n * updates within `render`. The parent component (ModalFooter) receives `setSticky` within render\n * (with the Context API), so it's not possible to access the function within its lifecycle hooks.\n * https://blog.kentcdodds.com/answers-to-common-questions-about-render-props-a9f84bb12d5d#6a05\n */\nexport default class StickyFooter extends React.Component<PropTypes> {\n    componentDidMount(): void {\n        const { setSticky } = this.props;\n        setSticky(true);\n    }\n\n    render(): JSX.Element {\n        const { children } = this.props;\n\n        return <div className={styles.root}>{children}</div>;\n    }\n}\n"],"names":["StickyFooter","setSticky","props","children","styles","root","React","Component"],"mappings":";;;;AAQA;;;;;;;IAMqBA;;;;;;;;;;;;;;UAELC,YAAc,KAAKC,MAAnBD;MACRA,SAAS,CAAC,IAAD,CAAT;;;;;UAIQE,WAAa,KAAKD,MAAlBC;aAED;QAAK,SAAS,EAAEC,MAAM,CAACC;SAAOF,QAA9B,CAAP;;;;;EATkCG,KAAK,CAACC;;;;"}