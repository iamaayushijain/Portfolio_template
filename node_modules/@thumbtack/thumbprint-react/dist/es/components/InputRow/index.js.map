{"version":3,"file":"index.js","sources":["../../../../components/InputRow/index.tsx"],"sourcesContent":["import React from 'react';\nimport warning from 'warning';\nimport styles from './index.module.scss';\n\nexport interface InputRowProps {\n    /**\n     * Form fields to display.\n     */\n    children: React.ReactNode;\n    /**\n     * An array of numbers (or `null`) that reflect the ratio of the widths of the `children`.\n     *\n     * Examples:\n     *\n     * * `[1, null]`: the first child takes up as much space as possible\n     * * `[1, 1, 1]`: splits the width evenly between three elements\n     * * `[1, 2, 1]`: the first and third child have the same width. The middle child is twice as\n     * wide as its siblings.\n     *\n     * The length of the array should be the same as the number of children.\n     */\n    widthRatios?: (number | null)[];\n    /**\n     * A selector hook into the React component for use in automated testing environments.\n     */\n    dataTestId?: string;\n    /**\n     * A selector hook into the React component for use in automated testing environments.\n     * @deprecated Deprecated in favor of the `dataTestId` prop\n     */\n    dataTest?: string;\n}\n\n// Components that import `InputRowContext` from this package will have access to this object. They\n// will then be able to know when their component is being used within an `InputRow` as well as\n// whether it is the first of last child.\nconst InputRowContext = React.createContext({\n    isWithinInputRow: false,\n    isFirstInputRowChild: false,\n    isLastInputRowChild: false,\n});\n\nexport { InputRowContext };\n\nexport default function InputRow({\n    widthRatios,\n    children,\n    dataTest,\n    dataTestId,\n}: InputRowProps): JSX.Element {\n    const widthLength = widthRatios && widthRatios.length;\n    const numChildren = React.Children.count(children);\n\n    warning(\n        !widthLength || widthLength === numChildren,\n        `The length of prop \\`width\\` (${widthLength}) must match the number of children (${numChildren}) passed to \\`InputRow\\`.`,\n    );\n\n    warning(\n        numChildren > 1,\n        `The \\`InputRow\\` component expects more than one child within the \\`children\\` prop. ${numChildren} received.`,\n    );\n\n    return (\n        <div className={styles.root} data-test={dataTest} data-testid={dataTestId}>\n            {React.Children.map(children, (child, i) => (\n                <div style={{ flex: widthRatios ? `${widthRatios[i]}` : undefined }}>\n                    <InputRowContext.Provider\n                        // eslint-disable-next-line react/jsx-no-constructed-context-values\n                        value={{\n                            isWithinInputRow: true,\n                            isFirstInputRowChild: i === 0,\n                            isLastInputRowChild: i + 1 === numChildren,\n                        }}\n                    >\n                        {child}\n                    </InputRowContext.Provider>\n                </div>\n            ))}\n        </div>\n    );\n}\n"],"names":["InputRowContext","React","createContext","isWithinInputRow","isFirstInputRowChild","isLastInputRowChild","InputRow","widthRatios","children","dataTest","dataTestId","widthLength","length","numChildren","Children","count","warning","styles","root","map","child","i","flex","undefined"],"mappings":";;;;AAkCA;;;AAEA,IAAMA,eAAe,GAAGC,KAAK,CAACC,aAAN,CAAoB;EACxCC,gBAAgB,EAAE,KADsB;EAExCC,oBAAoB,EAAE,KAFkB;EAGxCC,mBAAmB,EAAE;CAHD,CAAxB;AAMA,SAEwBC;MACpBC,mBAAAA;MACAC,gBAAAA;MACAC,gBAAAA;MACAC,kBAAAA;MAEMC,WAAW,GAAGJ,WAAW,IAAIA,WAAW,CAACK,MAA/C;MACMC,WAAW,GAAGZ,KAAK,CAACa,QAAN,CAAeC,KAAf,CAAqBP,QAArB,CAApB;EAEAQ,OAAO,CACH,CAACL,WAAD,IAAgBA,WAAW,KAAKE,WAD7B,wCAE8BF,WAF9B,kDAEiFE,WAFjF,6BAAP;EAKAG,OAAO,CACHH,WAAW,GAAG,CADX,6FAEqFA,WAFrF,gBAAP;SAMI;IAAK,SAAS,EAAEI,MAAM,CAACC,IAAvB;iBAAwCT,QAAxC;mBAA+DC;KAC1DT,KAAK,CAACa,QAAN,CAAeK,GAAf,CAAmBX,QAAnB,EAA6B,UAACY,KAAD,EAAQC,CAAR;WAC1B;MAAK,KAAK,EAAE;QAAEC,IAAI,EAAEf,WAAW,aAAMA,WAAW,CAACc,CAAD,CAAjB,IAAyBE;;OACpD,oBAAC,eAAD,CAAiB,QAAjB;;MAEI,KAAK,EAAE;QACHpB,gBAAgB,EAAE,IADf;QAEHC,oBAAoB,EAAEiB,CAAC,KAAK,CAFzB;QAGHhB,mBAAmB,EAAEgB,CAAC,GAAG,CAAJ,KAAUR;;OAGlCO,KARL,CADJ,CAD0B;GAA7B,CADL,CADJ;;;;;;"}