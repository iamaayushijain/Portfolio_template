import React from 'react';
import warning from 'warning';
import styles from './index.module.scss';

// will then be able to know when their component is being used within an `InputRow` as well as
// whether it is the first of last child.

var InputRowContext = React.createContext({
  isWithinInputRow: false,
  isFirstInputRowChild: false,
  isLastInputRowChild: false
});
function InputRow(_ref) {
  var widthRatios = _ref.widthRatios,
      children = _ref.children,
      dataTest = _ref.dataTest,
      dataTestId = _ref.dataTestId;
  var widthLength = widthRatios && widthRatios.length;
  var numChildren = React.Children.count(children);
  warning(!widthLength || widthLength === numChildren, "The length of prop `width` (".concat(widthLength, ") must match the number of children (").concat(numChildren, ") passed to `InputRow`."));
  warning(numChildren > 1, "The `InputRow` component expects more than one child within the `children` prop. ".concat(numChildren, " received."));
  return React.createElement("div", {
    className: styles.root,
    "data-test": dataTest,
    "data-testid": dataTestId
  }, React.Children.map(children, function (child, i) {
    return React.createElement("div", {
      style: {
        flex: widthRatios ? "".concat(widthRatios[i]) : undefined
      }
    }, React.createElement(InputRowContext.Provider, {
      // eslint-disable-next-line react/jsx-no-constructed-context-values
      value: {
        isWithinInputRow: true,
        isFirstInputRowChild: i === 0,
        isLastInputRowChild: i + 1 === numChildren
      }
    }, child));
  }));
}

export default InputRow;
export { InputRowContext };
//# sourceMappingURL=index.js.map
