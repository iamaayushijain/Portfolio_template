{"version":3,"file":"index.js","sources":["../../../../../../components/ModalBase/subcomponents/modal-contents/index.jsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport onClickOutside from 'react-onclickoutside';\nimport isFunction from 'lodash/isFunction';\nimport styles from './index.module.scss';\n\nclass ModalContents extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.handleClickOutside = this.handleClickOutside.bind(this);\n    }\n\n    handleClickOutside(event) {\n        const { onCloseClick } = this.props;\n\n        if (isFunction(onCloseClick)) {\n            onCloseClick(event);\n        }\n    }\n\n    render() {\n        const { isOpen, shouldAnimate, contentsMaxWidth, children } = this.props;\n\n        return (\n            <div\n                className={classnames(styles.modalContents, {\n                    [styles.modalContentsOpen]: isOpen,\n                    [styles.modalContentsAnimated]: shouldAnimate,\n                })}\n                style={{ maxWidth: contentsMaxWidth }}\n            >\n                {children}\n            </div>\n        );\n    }\n}\n\nModalContents.propTypes = {\n    /**\n     * Function that fires to close the modal.\n     */\n    onCloseClick: PropTypes.func,\n    /**\n     * Content inside the modal.\n     */\n    children: PropTypes.node,\n    /**\n     * The max width of the container that wraps the contents of the modal.\n     */\n    contentsMaxWidth: PropTypes.string.isRequired,\n    /**\n     * Used by `react-onclickoutside` to indicate if the modal should close\n     * when clicking outside of it. If `true`, this prevents backdrop clicks\n     * from closing the modal.\n     */\n    // eslint-disable-next-line react/no-unused-prop-types\n    disableOnClickOutside: PropTypes.oneOfType([\n        // This should be passed in as a boolean. `func` is also listed because\n        // onClickOutside`'s HOC changes it to a function.\n        PropTypes.bool,\n        PropTypes.func,\n    ]),\n    /**\n     * Should the modal contents be visible.\n     */\n    isOpen: PropTypes.bool,\n    /**\n     * Animate when opening and closing the modal.\n     */\n    shouldAnimate: PropTypes.bool,\n};\n\nModalContents.defaultProps = {\n    onCloseClick: undefined,\n    children: null,\n    disableOnClickOutside: undefined,\n    isOpen: false,\n    shouldAnimate: true,\n};\n\nexport default onClickOutside(ModalContents);\n"],"names":["ModalContents","props","handleClickOutside","bind","event","onCloseClick","isFunction","isOpen","shouldAnimate","contentsMaxWidth","children","classnames","styles","modalContents","modalContentsOpen","modalContentsAnimated","maxWidth","React","Component","propTypes","PropTypes","func","node","string","isRequired","disableOnClickOutside","oneOfType","bool","defaultProps","undefined","onClickOutside"],"mappings":";;;;;;;;IAOMA;;;;;yBACUC,KAAZ,EAAmB;;;;;uFACTA,KAAN;UAEKC,kBAAL,GAA0B,MAAKA,kBAAL,CAAwBC,IAAxB,+BAA1B;;;;;;uCAGeC,OAAO;UACdC,YADc,GACG,KAAKJ,KADR,CACdI,YADc;;UAGlBC,UAAU,CAACD,YAAD,CAAd,EAA8B;QAC1BA,YAAY,CAACD,KAAD,CAAZ;;;;;6BAIC;;;wBACyD,KAAKH,KAD9D;UACGM,MADH,eACGA,MADH;UACWC,aADX,eACWA,aADX;UAC0BC,gBAD1B,eAC0BA,gBAD1B;UAC4CC,QAD5C,eAC4CA,QAD5C;aAID;QACI,SAAS,EAAEC,UAAU,CAACC,MAAM,CAACC,aAAR,kDAChBD,MAAM,CAACE,iBADS,EACWP,MADX,gCAEhBK,MAAM,CAACG,qBAFS,EAEeP,aAFf,gBADzB;QAKI,KAAK,EAAE;UAAEQ,QAAQ,EAAEP;;SAElBC,QAPL,CADJ;;;;;EAlBoBO,KAAK,CAACC;;AAgClClB,aAAa,CAACmB,SAAd,GAA0B;;;;EAItBd,YAAY,EAAEe,SAAS,CAACC,IAJF;;;;;EAQtBX,QAAQ,EAAEU,SAAS,CAACE,IARE;;;;;EAYtBb,gBAAgB,EAAEW,SAAS,CAACG,MAAV,CAAiBC,UAZb;;;;;;;;EAmBtBC,qBAAqB,EAAEL,SAAS,CAACM,SAAV,CAAoB;;EAGvCN,SAAS,CAACO,IAH6B,EAIvCP,SAAS,CAACC,IAJ6B,CAApB,CAnBD;;;;;EA4BtBd,MAAM,EAAEa,SAAS,CAACO,IA5BI;;;;;EAgCtBnB,aAAa,EAAEY,SAAS,CAACO;CAhC7B;AAmCA3B,aAAa,CAAC4B,YAAd,GAA6B;EACzBvB,YAAY,EAAEwB,SADW;EAEzBnB,QAAQ,EAAE,IAFe;EAGzBe,qBAAqB,EAAEI,SAHE;EAIzBtB,MAAM,EAAE,KAJiB;EAKzBC,aAAa,EAAE;CALnB;AAQA,sBAAesB,cAAc,CAAC9B,aAAD,CAA7B;;;;"}