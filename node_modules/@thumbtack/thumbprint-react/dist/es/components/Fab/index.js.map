{"version":3,"file":"index.js","sources":["../../../../components/Fab/index.tsx"],"sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport styles from './index.module.scss';\n\nexport interface TextFabProps {\n    /**\n     * Children content to render.\n     */\n    children: React.ReactNode;\n    /**\n     * Theme that decides the style of the button.\n     */\n    theme?: 'primary' | 'secondary';\n    /**\n     * Function that will run when the fab is clicked on.\n     */\n    onClick?: () => void;\n    /**\n     * Description of the fab content. It is required if the link contains an icon and no\n     * descriptive text.\n     */\n    accessibilityLabel?: string;\n}\n\nexport function TextFab({\n    children,\n    theme = 'primary',\n    onClick,\n    accessibilityLabel,\n}: TextFabProps): JSX.Element {\n    return (\n        <button\n            className={classNames(styles.root, styles.textFab, {\n                [styles.primary]: theme === 'primary',\n                [styles.secondary]: theme === 'secondary',\n            })}\n            type=\"button\"\n            onClick={onClick}\n            aria-label={accessibilityLabel}\n        >\n            {children}\n        </button>\n    );\n}\n\nexport interface IconFabProps {\n    /**\n     * Icon from [Thumbprint Icons](/icons/) to render within the button. It must be one of the\n     * `medium` icons.\n     */\n    icon: React.ReactNode;\n    /**\n     * Theme that decides the style of the button.\n     */\n    theme?: 'primary' | 'secondary';\n    /**\n     * Function that will run when the fab is clicked on.\n     */\n    onClick?: () => void;\n    /**\n     * Description of the fab content. It is required if the link contains an icon and no\n     * descriptive text.\n     */\n    accessibilityLabel?: string;\n}\n\nexport function IconFab({\n    icon,\n    theme = 'primary',\n    onClick,\n    accessibilityLabel,\n}: IconFabProps): JSX.Element {\n    return (\n        <button\n            className={classNames(styles.root, styles.iconFab, {\n                [styles.primary]: theme === 'primary',\n                [styles.secondary]: theme === 'secondary',\n            })}\n            type=\"button\"\n            onClick={onClick}\n            aria-label={accessibilityLabel}\n        >\n            {icon}\n        </button>\n    );\n}\n"],"names":["TextFab","children","theme","onClick","accessibilityLabel","classNames","styles","root","textFab","primary","secondary","IconFab","icon","iconFab"],"mappings":";;;;;SAwBgBA;;;MACZC,gBAAAA;wBACAC;MAAAA,gCAAQ;MACRC,eAAAA;MACAC,0BAAAA;SAGI;IACI,SAAS,EAAEC,UAAU,CAACC,MAAM,CAACC,IAAR,EAAcD,MAAM,CAACE,OAArB,kDAChBF,MAAM,CAACG,OADS,EACCP,KAAK,KAAK,SADX,gCAEhBI,MAAM,CAACI,SAFS,EAEGR,KAAK,KAAK,WAFb,gBADzB;IAKI,IAAI,EAAC,QALT;IAMI,OAAO,EAAEC,OANb;kBAOgBC;KAEXH,QATL,CADJ;;AAoCJ,SAAgBU;;;MACZC,aAAAA;0BACAV;MAAAA,iCAAQ;MACRC,gBAAAA;MACAC,2BAAAA;SAGI;IACI,SAAS,EAAEC,UAAU,CAACC,MAAM,CAACC,IAAR,EAAcD,MAAM,CAACO,OAArB,oDAChBP,MAAM,CAACG,OADS,EACCP,KAAK,KAAK,SADX,iCAEhBI,MAAM,CAACI,SAFS,EAEGR,KAAK,KAAK,WAFb,iBADzB;IAKI,IAAI,EAAC,QALT;IAMI,OAAO,EAAEC,OANb;kBAOgBC;KAEXQ,IATL,CADJ;;;;;"}